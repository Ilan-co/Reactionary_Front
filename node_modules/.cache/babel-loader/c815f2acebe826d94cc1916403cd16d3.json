{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/draw.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nconst Draw = props => {\n  _s();\n\n  const [width] = useState(1000);\n  const [height] = useState(800);\n  const [drawing, setDrawing] = useState('');\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (props.drawing !== '') {\n      setDrawing(props.drawing);\n    }\n  });\n\n  function handleChange(canvasData) {\n    props.handleChange({\n      room: id,\n      draw: canvasData.getSaveData()\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CanvasDraw, {\n      hideGrid: true,\n      onChange: canvasData => handleChange(canvasData),\n      canvasWidth: width,\n      canvasHeight: height,\n      immediateLoading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasDraw, {\n      hideGrid: true,\n      disabled: true,\n      saveData: drawing,\n      canvasWidth: width,\n      canvasHeight: height,\n      immediateLoading: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Draw, \"dE0oK20M9j6Yq3TXytPzj9G5OHU=\", false, function () {\n  return [useParams];\n});\n\n_c = Draw;\nDraw.propTypes = {\n  handleChange: PropTypes.func,\n  drawing: PropTypes.arrayOf(PropTypes.object)\n};\nDraw.defaultProps = {\n  handleChange: () => {},\n  drawing: []\n};\nexport default Draw;\n\nvar _c;\n\n$RefreshReg$(_c, \"Draw\");","map":{"version":3,"sources":["/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/draw.component.jsx"],"names":["React","useEffect","useState","CanvasDraw","PropTypes","useParams","Draw","props","width","height","drawing","setDrawing","id","handleChange","canvasData","room","draw","getSaveData","propTypes","func","arrayOf","object","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,KAAD,IAAUN,QAAQ,CAAC,IAAD,CAAxB;AACA,QAAM,CAACO,MAAD,IAAWP,QAAQ,CAAC,GAAD,CAAzB;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAASP,SAAS,EAAxB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,CAACG,OAAN,KAAkB,EAAtB,EAA0B;AACxBC,MAAAA,UAAU,CAACJ,KAAK,CAACG,OAAP,CAAV;AACD;AACF,GAJQ,CAAT;;AAMA,WAASG,YAAT,CAAsBC,UAAtB,EAAkC;AAChCP,IAAAA,KAAK,CAACM,YAAN,CAAmB;AAAEE,MAAAA,IAAI,EAAEH,EAAR;AAAYI,MAAAA,IAAI,EAAEF,UAAU,CAACG,WAAX;AAAlB,KAAnB;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,QAAQ,EAAGH,UAAD,IAAgBD,YAAY,CAACC,UAAD,CAFxC;AAGE,MAAA,WAAW,EAAEN,KAHf;AAIE,MAAA,YAAY,EAAEC,MAJhB;AAKE,MAAA,gBAAgB;AALlB;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,UAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,QAAQ,EAAEC,OAHZ;AAIE,MAAA,WAAW,EAAEF,KAJf;AAKE,MAAA,YAAY,EAAEC,MALhB;AAME,MAAA,gBAAgB;AANlB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAoBD,CApCD;;GAAMH,I;UAIWD,S;;;KAJXC,I;AAsCNA,IAAI,CAACY,SAAL,GAAiB;AACfL,EAAAA,YAAY,EAAET,SAAS,CAACe,IADT;AAEfT,EAAAA,OAAO,EAAEN,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,MAA5B;AAFM,CAAjB;AAKAf,IAAI,CAACgB,YAAL,GAAoB;AAClBT,EAAAA,YAAY,EAAE,MAAM,CAAE,CADJ;AAElBH,EAAAA,OAAO,EAAE;AAFS,CAApB;AAKA,eAAeJ,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nconst Draw = (props) => {\n  const [width] = useState(1000);\n  const [height] = useState(800);\n  const [drawing, setDrawing] = useState('');\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (props.drawing !== '') {\n      setDrawing(props.drawing);\n    }\n  });\n\n  function handleChange(canvasData) {\n    props.handleChange({ room: id, draw: canvasData.getSaveData() });\n  }\n\n  return (\n    <>\n      <CanvasDraw\n        hideGrid\n        onChange={(canvasData) => handleChange(canvasData)}\n        canvasWidth={width}\n        canvasHeight={height}\n        immediateLoading\n      />\n      <br />\n      <CanvasDraw\n        hideGrid\n        disabled\n        saveData={drawing}\n        canvasWidth={width}\n        canvasHeight={height}\n        immediateLoading\n      />\n    </>\n  );\n};\n\nDraw.propTypes = {\n  handleChange: PropTypes.func,\n  drawing: PropTypes.arrayOf(PropTypes.object),\n};\n\nDraw.defaultProps = {\n  handleChange: () => {},\n  drawing: [],\n};\n\nexport default Draw;\n"]},"metadata":{},"sourceType":"module"}
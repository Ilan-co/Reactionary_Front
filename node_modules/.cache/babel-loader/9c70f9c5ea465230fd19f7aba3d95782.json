{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/form_message.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nconst FormMessage = props => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const {\n    id\n  } = useParams();\n\n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (message) {\n      props.handleSubmit({\n        id,\n        message,\n        date: new Date().toISOString()\n      });\n      setMessage('');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-form\",\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Message\",\n      value: message,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Valider\",\n      className: \"mainButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormMessage, \"GiPftH7RhFfpI7ZqEdE6G/QpVMA=\", false, function () {\n  return [useParams];\n});\n\n_c = FormMessage;\nFormMessage.propTypes = {\n  handleSubmit: PropTypes.func\n};\nFormMessage.defaultProps = {\n  handleSubmit: () => {}\n};\nexport default FormMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormMessage\");","map":{"version":3,"sources":["/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/form_message.component.jsx"],"names":["React","useState","PropTypes","useParams","FormMessage","props","message","setMessage","id","handleChange","e","target","value","handleSubmit","preventDefault","date","Date","toISOString","propTypes","func","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM;AAAEO,IAAAA;AAAF,MAASL,SAAS,EAAxB;;AACA,WAASM,YAAT,CAAsBC,CAAtB,EAAyB;AACvBH,IAAAA,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIR,OAAJ,EAAa;AACXD,MAAAA,KAAK,CAACQ,YAAN,CAAmB;AAAEL,QAAAA,EAAF;AAAMF,QAAAA,OAAN;AAAeS,QAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AAArB,OAAnB;AACAV,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF;;AAED,sBACE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,QAAQ,EAAGG,CAAD,IAAOG,YAAY,CAACH,CAAD,CAA9D;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,SAA/B;AAAyC,MAAA,KAAK,EAAEJ,OAAhD;AAAyD,MAAA,QAAQ,EAAEG;AAAnE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAqC,MAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtBD;;GAAML,W;UAGWD,S;;;KAHXC,W;AAwBNA,WAAW,CAACc,SAAZ,GAAwB;AACtBL,EAAAA,YAAY,EAAEX,SAAS,CAACiB;AADF,CAAxB;AAIAf,WAAW,CAACgB,YAAZ,GAA2B;AACzBP,EAAAA,YAAY,EAAE,MAAM,CAAE;AADG,CAA3B;AAIA,eAAeT,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\n\nconst FormMessage = (props) => {\n  const [message, setMessage] = useState('');\n\n  const { id } = useParams();\n  function handleChange(e) {\n    setMessage(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (message) {\n      props.handleSubmit({ id, message, date: new Date().toISOString() });\n      setMessage('');\n    }\n  }\n\n  return (\n    <form className=\"container-form\" onSubmit={(e) => handleSubmit(e)}>\n      <input type=\"text\" placeholder=\"Message\" value={message} onChange={handleChange} />\n      <input type=\"submit\" value=\"Valider\" className=\"mainButton\" />\n    </form>\n  );\n};\n\nFormMessage.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nFormMessage.defaultProps = {\n  handleSubmit: () => {},\n};\n\nexport default FormMessage;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/form_connect_room.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst FormConnectRoom = props => {\n  _s();\n\n  const [room, setRoom] = useState('');\n\n  function handleChange(e) {\n    setRoom(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!room) {\n      toast.error('Veuillez entrer une salle');\n    } else {\n      props.handleSubmit(room);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-connect-form\",\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Salle\",\n      value: room,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Valider\",\n      className: \"mainButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormConnectRoom, \"IjcSZBnmFX9xmz9wXgF5yWyoFBA=\");\n\n_c = FormConnectRoom;\nFormConnectRoom.propTypes = {\n  handleSubmit: PropTypes.func\n};\nFormConnectRoom.defaultProps = {\n  handleSubmit: () => {}\n};\nexport default FormConnectRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormConnectRoom\");","map":{"version":3,"sources":["/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/form_connect_room.component.jsx"],"names":["React","useState","PropTypes","toast","FormConnectRoom","props","room","setRoom","handleChange","e","target","value","handleSubmit","preventDefault","error","propTypes","func","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACvBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAACP,IAAL,EAAW;AACTH,MAAAA,KAAK,CAACW,KAAN,CAAY,2BAAZ;AACD,KAFD,MAEO;AACLT,MAAAA,KAAK,CAACO,YAAN,CAAmBN,IAAnB;AACD;AACF;;AAED,sBACE;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAyC,IAAA,QAAQ,EAAGG,CAAD,IAAOG,YAAY,CAACH,CAAD,CAAtE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,OAA/B;AAAuC,MAAA,KAAK,EAAEH,IAA9C;AAAoD,MAAA,QAAQ,EAAEE;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAqC,MAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtBD;;GAAMJ,e;;KAAAA,e;AAwBNA,eAAe,CAACW,SAAhB,GAA4B;AAC1BH,EAAAA,YAAY,EAAEV,SAAS,CAACc;AADE,CAA5B;AAIAZ,eAAe,CAACa,YAAhB,GAA+B;AAC7BL,EAAAA,YAAY,EAAE,MAAM,CAAE;AADO,CAA/B;AAIA,eAAeR,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst FormConnectRoom = (props) => {\n  const [room, setRoom] = useState('');\n\n  function handleChange(e) {\n    setRoom(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!room) {\n      toast.error('Veuillez entrer une salle');\n    } else {\n      props.handleSubmit(room);\n    }\n  }\n\n  return (\n    <form className=\"container-connect-form\" onSubmit={(e) => handleSubmit(e)}>\n      <input type=\"text\" placeholder=\"Salle\" value={room} onChange={handleChange} />\n      <input type=\"submit\" value=\"Valider\" className=\"mainButton\" />\n    </form>\n  );\n};\n\nFormConnectRoom.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nFormConnectRoom.defaultProps = {\n  handleSubmit: () => {},\n};\n\nexport default FormConnectRoom;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/containers/login.container.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport userAction from '../actions/user.action';\nimport NavBarNotLogged from '../components/navbar_not_logged.component';\nimport FormLogin from '../components/form_login.component';\n\nconst mapStateToProps = state => {\n  const {\n    isLogged\n  } = state.login;\n  return {\n    isLogged\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  login: values => dispatch(userAction.login(values))\n});\n\nconst Login = ({\n  login,\n  isLogged\n}) => isLogged ? /*#__PURE__*/_jsxDEV(Redirect, {\n  to: \"/connectRoom\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 7\n}, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(NavBarNotLogged, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FormLogin, {\n      handleSubmit: values => login(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this)]\n}, void 0, true);\n\n_c = Login;\nLogin.propTypes = {\n  login: PropTypes.func,\n  isLogged: PropTypes.bool\n};\nLogin.defaultProps = {\n  login: () => {},\n  isLogged: false\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/containers/login.container.jsx"],"names":["React","Redirect","connect","PropTypes","userAction","NavBarNotLogged","FormLogin","mapStateToProps","state","isLogged","login","mapDispatchToProps","dispatch","values","Login","propTypes","func","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAAK,CAACE,KAA3B;AACA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCF,EAAAA,KAAK,EAAGG,MAAD,IAAYD,QAAQ,CAACR,UAAU,CAACM,KAAX,CAAiBG,MAAjB,CAAD;AADa,CAAf,CAA3B;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAAEJ,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAD,KACZA,QAAQ,gBACJ,QAAC,QAAD;AAAU,EAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,QADI,gBAGJ;AAAA,0BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,YAAY,EAAGI,MAAD,IAAYH,KAAK,CAACG,MAAD;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA,gBAJN;;KAAMC,K;AAcNA,KAAK,CAACC,SAAN,GAAkB;AAChBL,EAAAA,KAAK,EAAEP,SAAS,CAACa,IADD;AAEhBP,EAAAA,QAAQ,EAAEN,SAAS,CAACc;AAFJ,CAAlB;AAKAH,KAAK,CAACI,YAAN,GAAqB;AACnBR,EAAAA,KAAK,EAAE,MAAM,CAAE,CADI;AAEnBD,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAKA,eAAeP,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CG,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport userAction from '../actions/user.action';\n\nimport NavBarNotLogged from '../components/navbar_not_logged.component';\nimport FormLogin from '../components/form_login.component';\n\nconst mapStateToProps = (state) => {\n  const { isLogged } = state.login;\n  return { isLogged };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (values) => dispatch(userAction.login(values)),\n});\n\nconst Login = ({ login, isLogged }) => (\n  isLogged\n    ? <Redirect to=\"/connectRoom\" />\n    : (\n      <>\n        <NavBarNotLogged />\n        <div className=\"container\">\n          <h1 className=\"title\">Connexion</h1>\n          <FormLogin handleSubmit={(values) => login(values)} />\n        </div>\n      </>\n    )\n);\n\nLogin.propTypes = {\n  login: PropTypes.func,\n  isLogged: PropTypes.bool,\n};\n\nLogin.defaultProps = {\n  login: () => {},\n  isLogged: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}
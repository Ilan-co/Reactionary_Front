{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/form_register.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { setTranslations, setDefaultLanguage, withTranslation } from 'react-multi-lang';\nimport pt from 'pt.json';\nimport en from 'en.json';\n\nconst FormRegister = props => {\n  _s();\n\n  const [pseudo, setPseudo] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkPassword, setCheckPassword] = useState('');\n\n  function handlePseudoChange(e) {\n    setPseudo(e.target.value);\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleCheckPasswordChange(e) {\n    setCheckPassword(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (checkPassword !== password) {\n      toast.error('Mot de passe diff');\n    } else {\n      props.handleSubmit({\n        pseudo,\n        password\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-form\",\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: t('hello.label'),\n      value: pseudo,\n      onChange: handlePseudoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Mot de passe\",\n      value: password,\n      onChange: handlePasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"R\\xE9p\\xE9ter le mot de passe\",\n      value: checkPassword,\n      onChange: handleCheckPasswordChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"S'inscrire\",\n      className: \"mainButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormRegister, \"p3J9NtPW9ctZEvzR2MSwXmvYQG8=\");\n\n_c = FormRegister;\nFormRegister.propTypes = {\n  handleSubmit: PropTypes.func\n};\nFormRegister.defaultProps = {\n  handleSubmit: () => {}\n};\nexport default FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/components/form_register.component.jsx"],"names":["React","useState","PropTypes","toast","setTranslations","setDefaultLanguage","withTranslation","pt","en","FormRegister","props","pseudo","setPseudo","password","setPassword","checkPassword","setCheckPassword","handlePseudoChange","e","target","value","handlePasswordChange","handleCheckPasswordChange","handleSubmit","preventDefault","error","t","propTypes","func","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,eAA9C,QAAqE,kBAArE;AACA,OAAOC,EAAP,MAAe,SAAf;AACA,OAAOC,EAAP,MAAe,SAAf;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;;AAEA,WAASgB,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7BN,IAAAA,SAAS,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD;;AAED,WAASC,oBAAT,CAA8BH,CAA9B,EAAiC;AAC/BJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AAED,WAASE,yBAAT,CAAmCJ,CAAnC,EAAsC;AACpCF,IAAAA,gBAAgB,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AACD;;AAED,WAASG,YAAT,CAAsBL,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACM,cAAF;;AACA,QAAIT,aAAa,KAAKF,QAAtB,EAAgC;AAC9BV,MAAAA,KAAK,CAACsB,KAAN,CAAY,mBAAZ;AACD,KAFD,MAEO;AACLf,MAAAA,KAAK,CAACa,YAAN,CAAmB;AAAEZ,QAAAA,MAAF;AAAUE,QAAAA;AAAV,OAAnB;AACD;AACF;;AAED,sBACE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,QAAQ,EAAGK,CAAD,IAAOK,YAAY,CAACL,CAAD,CAA9D;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAEQ,CAAC,CAAC,aAAD,CAAjC;AAAkD,MAAA,KAAK,EAAEf,MAAzD;AAAiE,MAAA,QAAQ,EAAEM;AAA3E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,cAAnC;AAAkD,MAAA,KAAK,EAAEJ,QAAzD;AAAmE,MAAA,QAAQ,EAAEQ;AAA7E;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,+BAAnC;AAA6D,MAAA,KAAK,EAAEN,aAApE;AAAmF,MAAA,QAAQ,EAAEO;AAA7F;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,YAA3B;AAAwC,MAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAlCD;;GAAMb,Y;;KAAAA,Y;AAoCNA,YAAY,CAACkB,SAAb,GAAyB;AACvBJ,EAAAA,YAAY,EAAErB,SAAS,CAAC0B;AADD,CAAzB;AAIAnB,YAAY,CAACoB,YAAb,GAA4B;AAC1BN,EAAAA,YAAY,EAAE,MAAM,CAAE;AADI,CAA5B;AAIA,eAAed,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { setTranslations, setDefaultLanguage, withTranslation } from 'react-multi-lang';\nimport pt from 'pt.json';\nimport en from 'en.json';\nimport type { T } from 'react-multi-lang';\n\nconst FormRegister = (props) => {\n  const [pseudo, setPseudo] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkPassword, setCheckPassword] = useState('');\n\n  function handlePseudoChange(e) {\n    setPseudo(e.target.value);\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleCheckPasswordChange(e) {\n    setCheckPassword(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (checkPassword !== password) {\n      toast.error('Mot de passe diff');\n    } else {\n      props.handleSubmit({ pseudo, password });\n    }\n  }\n\n  return (\n    <form className=\"container-form\" onSubmit={(e) => handleSubmit(e)}>\n      <input type=\"text\" placeholder={t('hello.label')} value={pseudo} onChange={handlePseudoChange} />\n      <input type=\"password\" placeholder=\"Mot de passe\" value={password} onChange={handlePasswordChange} />\n      <input type=\"password\" placeholder=\"Répéter le mot de passe\" value={checkPassword} onChange={handleCheckPasswordChange} />\n      <input type=\"submit\" value=\"S'inscrire\" className=\"mainButton\" />\n    </form>\n  );\n};\n\nFormRegister.propTypes = {\n  handleSubmit: PropTypes.func,\n};\n\nFormRegister.defaultProps = {\n  handleSubmit: () => {},\n};\n\nexport default FormRegister;\n"]},"metadata":{},"sourceType":"module"}
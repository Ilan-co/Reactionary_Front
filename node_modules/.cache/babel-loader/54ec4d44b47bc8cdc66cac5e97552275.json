{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/containers/register.container.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { getLanguage, setLanguage, useTranslation } from 'react-multi-lang';\nimport PropTypes from 'prop-types';\nimport userAction from '../actions/user.action';\nimport NavBarNotLogged from '../components/navbar_not_logged.component';\nimport FormRegister from '../components/form_register.component';\n\nconst mapStateToProps = state => {\n  const {\n    isRegister\n  } = state.register;\n  return {\n    isRegister\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  register: values => dispatch(userAction.register(values))\n});\n\nconst Register = ({\n  register,\n  isRegister\n}) => isRegister ? /*#__PURE__*/_jsxDEV(Redirect, {\n  to: \"/login\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 7\n}, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(NavBarNotLogged, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Selected lang\", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: getLanguage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: () => setLanguage('fr'),\n    children: \"FR\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: () => setLanguage('en'),\n    children: \"EN\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t('hello.label')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(FormRegister, {\n      handleSubmit: values => register(values)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this)]\n}, void 0, true);\n\n_c = Register;\nRegister.propTypes = {\n  register: PropTypes.func,\n  isRegister: PropTypes.bool\n};\nRegister.defaultProps = {\n  register: () => {},\n  isRegister: false\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/containers/register.container.jsx"],"names":["React","Redirect","connect","getLanguage","setLanguage","useTranslation","PropTypes","userAction","NavBarNotLogged","FormRegister","mapStateToProps","state","isRegister","register","mapDispatchToProps","dispatch","values","Register","t","propTypes","func","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,cAAnC,QAAyD,kBAAzD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAiBD,KAAK,CAACE,QAA7B;AACA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCF,EAAAA,QAAQ,EAAGG,MAAD,IAAYD,QAAQ,CAACR,UAAU,CAACM,QAAX,CAAoBG,MAApB,CAAD;AADU,CAAf,CAA3B;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,QAAF;AAAYD,EAAAA;AAAZ,CAAD,KACfA,UAAU,gBACN,QAAC,QAAD;AAAU,EAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,QADM,gBAGN;AAAA,0BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,6CAEE;AAAA,gBACGT,WAAW;AADd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAQE;AAAA;AAAA;AAAA;AAAA,UARF,eASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,eAUE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMA,WAAW,CAAC,IAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVF,eAWE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGc,CAAC,CAAC,aAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,YAAD;AAAc,MAAA,YAAY,EAAGF,MAAD,IAAYH,QAAQ,CAACG,MAAD;AAAhD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF;AAAA,gBAJN;;KAAMC,Q;AA0BNA,QAAQ,CAACE,SAAT,GAAqB;AACnBN,EAAAA,QAAQ,EAAEP,SAAS,CAACc,IADD;AAEnBR,EAAAA,UAAU,EAAEN,SAAS,CAACe;AAFH,CAArB;AAKAJ,QAAQ,CAACK,YAAT,GAAwB;AACtBT,EAAAA,QAAQ,EAAE,MAAM,CAAG,CADG;AAEtBD,EAAAA,UAAU,EAAE;AAFU,CAAxB;AAKA,eAAeV,OAAO,CAACQ,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CG,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { getLanguage, setLanguage, useTranslation } from 'react-multi-lang';\nimport PropTypes from 'prop-types';\nimport userAction from '../actions/user.action';\n\nimport NavBarNotLogged from '../components/navbar_not_logged.component';\nimport FormRegister from '../components/form_register.component';\n\nconst mapStateToProps = (state) => {\n  const { isRegister } = state.register;\n  return { isRegister };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  register: (values) => dispatch(userAction.register(values)),\n});\n\nconst Register = ({ register, isRegister }) => (\n  isRegister\n    ? <Redirect to=\"/login\" />\n    : (\n      <>\n        <NavBarNotLogged />\n        <div>\n          Selected lang\n          <b>\n            {getLanguage()}\n          </b>\n        </div>\n        <br />\n        <button type=\"button\" onClick={() => setLanguage('fr')}>FR</button>\n        <button type=\"button\" onClick={() => setLanguage('en')}>EN</button>\n        <div className=\"container\">\n          <h1 className=\"title\">Inscription</h1>\n          <h1>\n            {t('hello.label')}\n          </h1>\n          <FormRegister handleSubmit={(values) => register(values)} />\n        </div>\n      </>\n    )\n);\n\nRegister.propTypes = {\n  register: PropTypes.func,\n  isRegister: PropTypes.bool,\n};\n\nRegister.defaultProps = {\n  register: () => { },\n  isRegister: false,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}
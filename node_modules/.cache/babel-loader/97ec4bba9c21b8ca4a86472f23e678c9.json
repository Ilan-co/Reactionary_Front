{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/containers/connect_room.container.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport socketAction from '../actions/socket.action';\nimport FormConnectRoom from '../components/form_connect_room.component';\n\nconst mapStateToProps = state => {\n  const {\n    connectedToRoom,\n    room\n  } = state.connectRoom;\n  const {\n    rooms\n  } = state.getRooms;\n  return {\n    connectedToRoom,\n    room,\n    rooms\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  connectToRoom: values => dispatch(socketAction.connectToRoom(values)),\n  getRooms: values => dispatch(socketAction.getRooms(values))\n});\n\nconst ConnectRoom = ({\n  connectedToRoom,\n  room,\n  rooms,\n  connectToRoom,\n  getRooms\n}) => {\n  _s();\n\n  useEffect(() => {\n    getRooms();\n  }, [rooms.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [connectedToRoom && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/room/${room}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connect-room-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Cr\\xE9er / Rejoindre une salle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectRoom\",\n        children: rooms.map(element => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/room/${element}`,\n          className: \"room-element nav-link\",\n          onClick: () => connectToRoom(element),\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, element, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormConnectRoom, {\n        className: \"inputRoom\",\n        handleSubmit: values => connectToRoom(values)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ConnectRoom, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ConnectRoom;\nConnectRoom.propTypes = {\n  connectedToRoom: PropTypes.bool,\n  room: PropTypes.string,\n  rooms: PropTypes.arrayOf(PropTypes.string),\n  connectToRoom: PropTypes.func,\n  getRooms: PropTypes.func\n};\nConnectRoom.defaultProps = {\n  connectedToRoom: false,\n  room: '',\n  rooms: [],\n  connectToRoom: () => {},\n  getRooms: () => {}\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectRoom\");","map":{"version":3,"sources":["/Users/ilan/Dev/GitHub/Reactionary_Front/reactionary_front/src/containers/connect_room.container.jsx"],"names":["React","useEffect","connect","PropTypes","Redirect","Link","socketAction","FormConnectRoom","mapStateToProps","state","connectedToRoom","room","connectRoom","rooms","getRooms","mapDispatchToProps","dispatch","connectToRoom","values","ConnectRoom","length","map","element","propTypes","bool","string","arrayOf","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Link } from 'react-router-dom';\nimport socketAction from '../actions/socket.action';\nimport FormConnectRoom from '../components/form_connect_room.component';\n\nconst mapStateToProps = (state) => {\n  const { connectedToRoom, room } = state.connectRoom;\n  const { rooms } = state.getRooms;\n  return { connectedToRoom, room, rooms };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  connectToRoom: (values) => dispatch(socketAction.connectToRoom(values)),\n  getRooms: (values) => dispatch(socketAction.getRooms(values)),\n});\n\nconst ConnectRoom = ({\n  connectedToRoom, room, rooms, connectToRoom, getRooms,\n}) => {\n  useEffect(() => {\n    getRooms();\n  }, [rooms.length]);\n\n  return (\n    <>\n      {connectedToRoom && (\n      <Redirect to={`/room/${room}`} />\n      )}\n      <div className=\"connect-room-layout\">\n        <h1 className=\"title\">Cr√©er / Rejoindre une salle</h1>\n        <div className=\"selectRoom\">\n          {rooms.map((element) => (\n            <Link to={`/room/${element}`} className=\"room-element nav-link\" key={element} onClick={() => connectToRoom(element)}>\n              <b>\n                {element}\n              </b>\n            </Link>\n          ))}\n        </div>\n        <FormConnectRoom className=\"inputRoom\" handleSubmit={(values) => connectToRoom(values)} />\n      </div>\n    </>\n  );\n};\n\nConnectRoom.propTypes = {\n  connectedToRoom: PropTypes.bool,\n  room: PropTypes.string,\n  rooms: PropTypes.arrayOf(PropTypes.string),\n  connectToRoom: PropTypes.func,\n  getRooms: PropTypes.func,\n};\n\nConnectRoom.defaultProps = {\n  connectedToRoom: false,\n  room: '',\n  rooms: [],\n  connectToRoom: () => {},\n  getRooms: () => {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectRoom);\n"]},"metadata":{},"sourceType":"module"}